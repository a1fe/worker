version: '3.8'

services:
  pump-bot-worker:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: pump-bot-worker
    restart: unless-stopped
    
    environment:
      # Основные настройки (переопределите в .env файле)
      - COORDINATOR_WS_URL=${COORDINATOR_WS_URL:-ws://coordinator:8000/ws/coordinator}
      - API_KEY=${API_KEY}
      - WORKER_ID=${WORKER_ID:-worker-docker-001}
      - WORKER_REGION=${WORKER_REGION:-docker}
      
      # Solana настройки
      - SOLANA_RPC_URL=${SOLANA_RPC_URL:-https://api.mainnet-beta.solana.com}
      - SOLANA_PRIVATE_KEY=${SOLANA_PRIVATE_KEY}
      
      # Логирование
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - DEBUG_MODE=${DEBUG_MODE:-false}
      
      # Метрики
      - METRICS_ENABLED=${METRICS_ENABLED:-true}
      - METRICS_PORT=${METRICS_PORT:-8081}
    
    ports:
      - "${METRICS_PORT:-8081}:8081"  # Metrics port
    
    volumes:
      - ./logs:/app/logs
      - ./wallets:/app/wallets
      - ./config:/app/config
      - ./.env:/app/.env:ro
    
    networks:
      - pump-bot-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8081/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "3"

networks:
  pump-bot-network:
    driver: bridge
    name: pump-bot-network

# Optional: Monitoring stack
# Uncomment to add Prometheus and Grafana monitoring

prometheus:
  image: prom/prometheus:latest
  container_name: prometheus
  restart: unless-stopped
  ports:
    - "9090:9090"
  volumes:
    - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - prometheus-data:/prometheus
  command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--storage.tsdb.path=/prometheus'
    - '--web.console.libraries=/etc/prometheus/console_libraries'
    - '--web.console.templates=/etc/prometheus/consoles'
    - '--storage.tsdb.retention.time=200h'
    - '--web.enable-lifecycle'
  networks:
    - pump-bot-network

grafana:
  image: grafana/grafana:latest
  container_name: grafana
  restart: unless-stopped
  ports:
    - "3000:3000"
  environment:
    - GF_SECURITY_ADMIN_PASSWORD=admin
  volumes:
    - grafana-data:/var/lib/grafana
    - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  networks:
    - pump-bot-network

#volumes:
#  prometheus-data:
#  grafana-data:
