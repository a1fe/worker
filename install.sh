#!/bin/bash
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ Pump Bot Worker

set -e

echo "üöÄ PUMP BOT WORKER - –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ê–Ø –£–°–¢–ê–ù–û–í–ö–ê"
echo "============================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
OS="$(uname -s)"
case "${OS}" in
    Linux*)     MACHINE=Linux;;
    Darwin*)    MACHINE=Mac;;
    CYGWIN*)    MACHINE=Cygwin;;
    MINGW*)     MACHINE=MinGw;;
    *)          MACHINE="UNKNOWN:${unameOut}"
esac

echo "üñ•Ô∏è  –û–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞: $MACHINE"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ uv
if command -v uv &> /dev/null; then
    UV_VERSION=$(uv --version 2>/dev/null || echo "unknown")
    echo "‚ö° uv: $UV_VERSION"
else
    echo "‚ùå uv –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    if [[ "$MACHINE" == "Linux" ]] || [[ "$MACHINE" == "Mac" ]]; then
        echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ uv —á–µ—Ä–µ–∑ curl..."
        curl -LsSf https://astral.sh/uv/install.sh | sh
        # –î–æ–±–∞–≤–ª—è–µ–º uv –≤ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        export PATH="$HOME/.cargo/bin:$PATH"
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É
        if command -v uv &> /dev/null; then
            UV_VERSION=$(uv --version)
            echo "‚úÖ uv —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $UV_VERSION"
        else
            echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ uv. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "   curl -LsSf https://astral.sh/uv/install.sh | sh"
            exit 1
        fi
    elif [[ "$MACHINE" == "CYGWIN" ]] || [[ "$MACHINE" == "MINGW" ]]; then
        echo "üì• –£—Å—Ç–∞–Ω–æ–≤–∫–∞ uv —á–µ—Ä–µ–∑ PowerShell..."
        powershell -ExecutionPolicy ByPass -c "irm https://astral.sh/uv/install.ps1 | iex"
        if ! command -v uv &> /dev/null; then
            echo "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ uv. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:"
            echo "   powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\""
            exit 1
        fi
    else
        echo "‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ uv"
        echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ uv –≤—Ä—É—á–Ω—É—é: https://docs.astral.sh/uv/getting-started/installation/"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python
if command -v python3 &> /dev/null; then
    PYTHON_VERSION=$(python3 --version | cut -d' ' -f2)
    echo "üêç Python: $PYTHON_VERSION"
else
    echo "‚ùå Python 3 –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
    if [[ "$MACHINE" == "Linux" ]]; then
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip python3-venv
    elif [[ "$MACHINE" == "Mac" ]]; then
        if command -v brew &> /dev/null; then
            brew install python3
        else
            echo "‚ùå Homebrew –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3 –≤—Ä—É—á–Ω—É—é: https://python.org"
            exit 1
        fi
    fi
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ uv –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v uv &> /dev/null; then
    echo "‚ö° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ uv (–±—ã—Å—Ç—Ä—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø–∞–∫–µ—Ç–æ–≤ Python)..."
    if [[ "$MACHINE" == "Linux" ]] || [[ "$MACHINE" == "Mac" ]]; then
        curl -LsSf https://astral.sh/uv/install.sh | sh
        source ~/.bashrc 2>/dev/null || source ~/.zshrc 2>/dev/null || export PATH="$HOME/.cargo/bin:$PATH"
    else
        echo "‚ùå –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ uv –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è $MACHINE"
        echo "   –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ uv –≤—Ä—É—á–Ω—É—é: https://docs.astral.sh/uv/getting-started/installation/"
        exit 1
    fi
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ uv
if ! command -v uv &> /dev/null; then
    echo "‚ùå uv –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ PATH. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Ä–º–∏–Ω–∞–ª –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ ~/.cargo/bin –≤ PATH"
    echo "   export PATH=\"\$HOME/.cargo/bin:\$PATH\""
    exit 1
fi

UV_VERSION=$(uv --version)
echo "‚ö° uv: $UV_VERSION"

# –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ uv
echo "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ uv..."
uv venv venv --python python3

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
source venv/bin/activate

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ uv (–Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ pip)
echo "üìö –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —á–µ—Ä–µ–∑ uv..."
if [[ -f "pyproject.toml" ]]; then
    echo "   –ò—Å–ø–æ–ª—å–∑—É–µ–º pyproject.toml –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    uv pip install -e .
else
    echo "   –ò—Å–ø–æ–ª—å–∑—É–µ–º requirements.txt –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
    uv pip install -r requirements.txt
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
mkdir -p logs
mkdir -p wallets
mkdir -p config

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if [[ ! -f .env ]]; then
    echo "‚öôÔ∏è  –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    cp .env.example .env
    echo ""
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª!"
    echo "   1. –û—Ç–∫—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª –≤ —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ"
    echo "   2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ COORDINATOR_WS_URL"
    echo "   3. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ API_KEY"
    echo "   4. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ SOLANA_PRIVATE_KEY"
    echo ""
else
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è Linux)
if [[ "$MACHINE" == "Linux" ]]; then
    echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    SERVICE_FILE="/etc/systemd/system/pump-bot-worker.service"
    CURRENT_DIR=$(pwd)
    
    sudo tee $SERVICE_FILE > /dev/null <<EOF
[Unit]
Description=Pump Bot Worker
After=network.target

[Service]
Type=simple
User=$USER
WorkingDirectory=$CURRENT_DIR
Environment=PATH=$CURRENT_DIR/venv/bin
ExecStart=$CURRENT_DIR/venv/bin/python -m src.worker_app
Restart=always
RestartSec=10

[Install]
WantedBy=multi-user.target
EOF

    sudo systemctl daemon-reload
    sudo systemctl enable pump-bot-worker
    
    echo "‚úÖ Systemd —Å–µ—Ä–≤–∏—Å —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"
    echo "   –ó–∞–ø—É—Å–∫: sudo systemctl start pump-bot-worker"
    echo "   –°—Ç–∞—Ç—É—Å: sudo systemctl status pump-bot-worker"
    echo "   –õ–æ–≥–∏:   sudo journalctl -u pump-bot-worker -f"
fi

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞
echo "üìù –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è..."
chmod +x start.sh stop.sh update.sh
chmod +x scripts/*.sh

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
echo ""
echo "üß™ –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
source venv/bin/activate
echo "   –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
python3 -c "
try:
    import asyncio
    import websockets
    import solana
    import httpx
    import pydantic
    print('‚úÖ –í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã')
    print('   - asyncio: –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –º–æ–¥—É–ª—å')
    print('   - websockets: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
    print('   - solana: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
    print('   - httpx: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
    print('   - pydantic: –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω')
except ImportError as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    print('   –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å: uv pip install -r requirements.txt')
    exit(1)
"

echo ""
echo "üéâ –£–°–¢–ê–ù–û–í–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!"
echo "======================"
echo ""
echo "üì¶ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω uv –¥–ª—è –±—ã—Å—Ç—Ä–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"
echo "‚ö° –í—Ä–µ–º—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ —Å–æ–∫—Ä–∞—â–µ–Ω–æ"
echo ""
echo "üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:"
echo "1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ .env —Ñ–∞–π–ª: nano .env"
echo "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤–æ—Ä–∫–µ—Ä–∞: ./start.sh"
echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å: ./scripts/health_check.sh"
echo ""
echo "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: cat README.md"
echo "üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞: tail -f logs/worker.log"
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
if grep -q "your-coordinator" .env 2>/dev/null; then
    echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ù–µ –∑–∞–±—É–¥—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å .env —Ñ–∞–π–ª!"
fi
