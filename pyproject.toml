[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "pump-bot-worker"
version = "2.0.0"
description = "Autonomous Pump Bot Worker for Solana Trading"
readme = "README.md"
requires-python = ">=3.13"
license = {text = "MIT"}
authors = [
    {name = "Pump Bot Team", email = "team@pumpbot.io"}
]
keywords = ["solana", "trading", "bot", "pump", "worker"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]

dependencies = [
    "websockets>=9.0,<12.0",
    "httpx>=0.27.0",
    "solana>=0.36.0",
    "solders>=0.21.0",
    "pydantic>=2.8.0",
    "pydantic-settings>=2.4.0",
    "python-dotenv>=1.0.1",
    "cryptography>=42.0.0",
    "PyNaCl>=1.5.0",
    "base58>=2.1.1",
    "orjson>=3.10.0",
    "structlog>=24.0.0",
    "prometheus-client>=0.20.0",
    "uvicorn>=0.30.0",
    "fastapi>=0.112.0",
    "psutil>=6.0.0",
    "click>=8.1.7",
    "rich>=13.8.0",
    "python-dateutil>=2.9.0",
    "aiofiles>=24.1.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.0",
    "pytest-asyncio>=0.23.8",
    "black>=24.8.0",
    "mypy>=1.11.0",
    "memory-profiler>=0.61.0"
]

monitoring = [
    "grafana-client>=3.5.0",
    "influxdb-client>=1.38.0"
]

notifications = [
    "discord.py>=2.3.0",
    "python-telegram-bot>=20.6"
]

[project.urls]
Homepage = "https://github.com/a1fe/worker"
Documentation = "https://github.com/a1fe/worker"
Repository = "https://github.com/a1fe/worker.git"
"Bug Tracker" = "https://github.com/a1fe/worker/issues"

[project.scripts]
pump-worker = "src.worker_app:main"
worker-health = "scripts.health_check:main"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "solana.*",
    "solders.*",
    "anchorpy.*",
    "base58.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "venv/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError"
]
